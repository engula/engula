// Copyright 2022 The Engula Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package engula.v1;

import "engula/v1/metadata.proto";

service Admin {
  rpc GetDatabase(GetDatabaseRequest) returns (GetDatabaseResponse) {}
  rpc ListDatabases(ListDatabasesRequest) returns (ListDatabasesResponse) {}
  rpc CreateDatabase(CreateDatabaseRequest) returns (CreateDatabaseResponse) {}
  rpc GetCollection(GetCollectionRequest) returns (GetCollectionResponse) {}
  rpc ListCollections(ListCollectionsRequest)
      returns (ListCollectionsResponse) {}
  rpc CreateCollection(CreateCollectionRequest)
      returns (CreateCollectionResponse) {}
}

message GetDatabaseRequest {
  // Required. The name of the database.
  string name = 1;
}

message GetDatabaseResponse { DatabaseDesc database = 1; }

message ListDatabasesRequest {}

message ListDatabasesResponse { repeated DatabaseDesc databases = 1; }

message CreateDatabaseRequest {
  // Required. The name of the database.
  string name = 1;
}

message CreateDatabaseResponse { DatabaseDesc database = 1; }

message GetCollectionRequest {
  // Required. The name of the collection.
  string name = 1;
  // Required. The name of the parent database.
  string parent = 2;
}

message GetCollectionResponse { CollectionDesc collection = 1; }

message ListCollectionsRequest {
  // Required. The name of the parent database.
  string parent = 1;
}

message ListCollectionsResponse { repeated CollectionDesc collections = 1; }

message CreateCollectionRequest {
  // Required. The name of the collection.
  string name = 1;
  // Required. The name of the parent database.
  string parent = 2;
}

message CreateCollectionResponse {}
